"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var find = require("find");
var fileinfo = require("filenameinfo");
var Promise = require("bluebird");
var async = require("async");
var unicoid_1 = require("unicoid");
var getFileSize = require('getfilesize');
var getDuration = require('get-video-duration');
var ffmetadata = require("ffmetadata");
function list(path, config) {
    function createuid(array) {
        var exists = false;
        var uid = unicoid_1.uniqueid(8);
        for (var i = 0; i < array.length; i++) {
            if (array[i].uid === uid) {
                exists = true;
            }
        }
        if (exists) {
            return createuid(array);
        }
        else {
            return uid;
        }
    }
    return new Promise(function (resolve, reject) {
        find.file(path, function (files) {
            var media = [];
            for (var i = 0; i < files.length; i++) {
                if (parseInt(getFileSize(files[0])) && parseInt(getFileSize(files[0])) > 0) {
                    console.log('check ' + files[0], parseInt(getFileSize(files[0])));
                    var m = fileinfo.filenameinfo(files[i]);
                    if (m.extensionFamily === 'video' || m.extensionFamily === 'audio') {
                        m.uid = createuid(media);
                        if (config && config.serverUri && config.serverUri.path && config.serverUri.uri && m.path.split(config.serverUri.path).length > 1 && m.path.split(config.serverUri.path)[0] === '') {
                            m.uri = config.serverUri.uri + m.path.split(config.serverUri.path)[1];
                        }
                        media.push(m);
                    }
                }
            }
            async.eachSeries(media, function (m, cb) {
                getDuration(m.path).then(function (a) {
                    m.duration = a;
                    ffmetadata.read(m.path, function (err, data) {
                        if (err) {
                            cb("Error reading metadata");
                        }
                        else {
                            m.meta = data;
                            cb();
                        }
                        ;
                    });
                }).catch(function (err) {
                    cb(err);
                });
            }, function (err) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(media);
                }
            });
        }).error(function (err) {
            if (err) {
                reject(err);
            }
            else {
                reject('find error');
            }
        });
    });
}
exports.list = list;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QyxDQUFDLENBQUE7UUFJSixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHO1lBQ3BCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ1IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1lBQ2IsQ0FBQztZQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNOLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQTtZQUN0QixDQUFDO1FBQ0gsQ0FBQyxDQUFDLENBQUE7SUFJSixDQUFDLENBQUMsQ0FBQTtBQUlKLENBQUM7QUE5RkQsb0JBOEZDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZmluZCBmcm9tICdmaW5kJ1xuaW1wb3J0ICogYXMgZmlsZWluZm8gZnJvbSAnZmlsZW5hbWVpbmZvJ1xuaW1wb3J0ICogYXMgUHJvbWlzZSBmcm9tICdibHVlYmlyZCdcbmltcG9ydCAqIGFzIGFzeW5jIGZyb20gJ2FzeW5jJ1xuaW1wb3J0IHsgdW5pcXVlaWQgfSBmcm9tICd1bmljb2lkJ1xuXG5jb25zdCBnZXRGaWxlU2l6ZSA9IHJlcXVpcmUoJ2dldGZpbGVzaXplJyk7XG5cblxuY29uc3QgZ2V0RHVyYXRpb24gPSByZXF1aXJlKCdnZXQtdmlkZW8tZHVyYXRpb24nKTtcbmNvbnN0IGZmbWV0YWRhdGEgPSByZXF1aXJlKFwiZmZtZXRhZGF0YVwiKTtcblxuXG5pbnRlcmZhY2UgSU1lZGlhRmlsZUluZm9Db25mIHtcbiAgZm9ybWF0cz86IHN0cmluZ1tdXG4gIGV4Y2x1ZGU/OiBzdHJpbmdbXVxuICBzZXJ2ZXJVcmk/OiB7IHBhdGg6IHN0cmluZywgdXJpOiBzdHJpbmcgfVxufVxuaW50ZXJmYWNlIElNZWRpYUZpbGVSZXNwIHtcbiAgbWV0YTogSU1lZGlhRmlsZU1ldGFcbiAgZHVyYXRpb246IHN0cmluZ1xuICBwYXRoOiBzdHJpbmdcbiAgZnVsbG5hbWU6IHN0cmluZ1xuICBuYW1lOiBzdHJpbmdcbiAgZXh0ZW5zaW9uOiBzdHJpbmdcbiAgZGlyOiBzdHJpbmdcbiAgZXh0ZW5zaW9uRmFtaWx5OiBzdHJpbmdcbiAgZXh0ZW5zaW9uVHlwZTogc3RyaW5nXG4gIHVpZDogc3RyaW5nXG59XG5cbmludGVyZmFjZSBJTWVkaWFGaWxlTWV0YSB7XG5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxpc3QocGF0aDogc3RyaW5nLCBjb25maWc/OiBJTWVkaWFGaWxlSW5mb0NvbmYpIHtcblxuICBmdW5jdGlvbiBjcmVhdGV1aWQoYXJyYXkpIHtcbiAgICBsZXQgZXhpc3RzID0gZmFsc2VcbiAgICBjb25zdCB1aWQgPSB1bmlxdWVpZCg4KVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhcnJheVtpXS51aWQgPT09IHVpZCkge1xuICAgICAgICBleGlzdHMgPSB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGV4aXN0cykge1xuICAgICAgcmV0dXJuIGNyZWF0ZXVpZChhcnJheSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHVpZFxuICAgIH1cblxuICB9XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlPElNZWRpYUZpbGVSZXNwW10+KChyZXNvbHZlLCByZWplY3QpID0+IHtcblxuICAgIGZpbmQuZmlsZShwYXRoLCBmdW5jdGlvbiAoZmlsZXMpIHtcblxuXG4gICAgICBjb25zdCBtZWRpYTogSU1lZGlhRmlsZVJlc3BbXSA9IFtdXG5cblxuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7XG5cbiAgICAgICAgaWYgKHBhcnNlSW50KGdldEZpbGVTaXplKGZpbGVzWzBdKSkgJiYgcGFyc2VJbnQoZ2V0RmlsZVNpemUoZmlsZXNbMF0pKSA+IDApIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnY2hlY2sgJytmaWxlc1swXSxwYXJzZUludChnZXRGaWxlU2l6ZShmaWxlc1swXSkpKVxuICAgICAgICAgIGNvbnN0IG06IGFueSA9IGZpbGVpbmZvLmZpbGVuYW1laW5mbyhmaWxlc1tpXSlcbiAgICAgICAgICBpZiAobS5leHRlbnNpb25GYW1pbHkgPT09ICd2aWRlbycgfHwgbS5leHRlbnNpb25GYW1pbHkgPT09ICdhdWRpbycpIHtcblxuXG4gICAgICAgICAgICBtLnVpZCA9IGNyZWF0ZXVpZChtZWRpYSlcblxuICAgICAgICAgICAgaWYgKGNvbmZpZyAmJiBjb25maWcuc2VydmVyVXJpICYmIGNvbmZpZy5zZXJ2ZXJVcmkucGF0aCAmJiBjb25maWcuc2VydmVyVXJpLnVyaSAmJiBtLnBhdGguc3BsaXQoY29uZmlnLnNlcnZlclVyaS5wYXRoKS5sZW5ndGggPiAxICYmIG0ucGF0aC5zcGxpdChjb25maWcuc2VydmVyVXJpLnBhdGgpWzBdID09PSAnJykge1xuICAgICAgICAgICAgICBtLnVyaSA9IGNvbmZpZy5zZXJ2ZXJVcmkudXJpICsgbS5wYXRoLnNwbGl0KGNvbmZpZy5zZXJ2ZXJVcmkucGF0aClbMV1cbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICBtZWRpYS5wdXNoKG0pXG5cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuXG5cblxuICAgICAgfVxuXG5cblxuICAgICAgYXN5bmMuZWFjaFNlcmllcyhtZWRpYSwgKG0sIGNiKSA9PiB7XG4gICAgICAgIGdldER1cmF0aW9uKG0ucGF0aCkudGhlbigoYSkgPT4ge1xuICAgICAgICAgIG0uZHVyYXRpb24gPSBhXG4gICAgICAgICAgZmZtZXRhZGF0YS5yZWFkKG0ucGF0aCwgZnVuY3Rpb24gKGVyciwgZGF0YSkge1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICBjYihcIkVycm9yIHJlYWRpbmcgbWV0YWRhdGFcIilcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIG0ubWV0YSA9IGRhdGFcbiAgICAgICAgICAgICAgY2IoKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgY2IoZXJyKVxuICAgICAgICB9KVxuICAgICAgfSwgKGVycikgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KGVycilcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXNvbHZlKG1lZGlhKVxuICAgICAgICB9XG4gICAgICB9KVxuXG5cblxuICAgIH0pLmVycm9yKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmVqZWN0KGVycilcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlamVjdCgnZmluZCBlcnJvcicpXG4gICAgICB9XG4gICAgfSlcblxuXG5cbiAgfSlcblxuXG5cbn1cblxuXG4iXX0=
